<!-- <!DOCTYPE article PUBLIC "-//JABBER//DTD DocBook V3.1-Based Extension V1.0//EN" "jep.dtd"> -->
<article>
<artheader>
  <title>SVG whiteboarding for Jabber</title>
  <abstract><para>A protocol proposal for SVG whiteboarding over Jabber</para></abstract>
  <legalnotice><para>This document has been placed in the public domain.</para></legalnotice>
  <authorgroup>
    <author>
      <firstname>Niklas</firstname>
      <surname>Gustavsson</surname>
      <affiliation>
        <orgname>protocol7</orgname>
        <address>
          <email>niklas@protocol7.com</email>
          <otheraddr>nikgus@jabber.org</otheraddr>
        </address>
      </affiliation>
    </author>
  </authorgroup>
  <revhistory>
    <revision>
      <revnumber>0.5</revnumber>
      <date>2001-09-15</date>
      <authorinitials>ng</authorinitials>
      <revremark>Draft (not submitted)</revremark>
    </revision>
  </revhistory>
  <jepinfo>
    <jepnumber></jepnumber>
    <jepstatus>Proposed</jepstatus>
    <jeptype>Standards Track</jeptype>
    <jigs>
      <primaryjig>None</primaryjig>
      <secondaryjigs>None</secondaryjigs>
    </jigs>
  </jepinfo>
</artheader>
<section>
  <title>Introduction</title>
  <para>A good protocol for whiteboarding in Jabber would be very valuable. There is today a protocol draft for sending streaming XPM over Jabber (http://docs.jabber.org/draft-proto/html/sxpm.html). XPM is a bitmap format, which makes it great for some applications (smaller drawings, sketches). But bigger changes in the image will require sending large amounts of XML data (even with the compressions in the protocol draft), also, it does not scale without loss of resolution or support metadata.</para>
  <para>For most applications of whiteboarding, a vector format would be more appropriate. The proposed standard for vector graphics is SVG (http://www.w3.org/Graphics/SVG/). Since SVG is based on XML it will work good with the Jabber protocol, but the current SVG specification does not make any considerations for streaming SVG. Also, SVG is a very complex format, much more then is necessary for whiteboarding. Therefore, a SVG subset changed to work with streaming would be perfect for Jabber.</para>
  <para>This proposal also defines the protocol for setting up and communicating during a whiteboard session (both peer-to-peer and conference).</para>
</section>
<section>
  <title>Requirements</title>
  <para>This section describes the requirements that this proposal should fulfil.</para>
  <para>
      <programlisting>Work both with peer-to-peer and conferencing
It should be possible to detect if a client supports SVG whiteboarding
Be transparent to clients that do not support SVG whiteboarding
It should be possible to join in the middle of a session
Use as compact messages as possible and practical to save bandwidth
Support a subset of SVG, enough for normal whiteboarding but as compact as possible
Support streaming of SVG
The SVG subset should be extensible to include symbol definitions for, for example UML
Should not use any CSS
Should support adding, changing and deleting SVG objects</programlisting>
  </para>
</section>
<section>
  <title>Protocol proposal</title>
  <para>SVG data is sent using &#60;x xmlns="jabber:x:whiteboard:svg"&#62; tags included in regular message tags. For example (the SVG tags are explained in the section "SVG subset"):</para>
  <para>Send:</para>
  <para>
    <blockquote>
      <programlisting>&#60;message to="nikgus@jabber.org" thread="234324"&#62;
  &#60;x xmlns="jabber:x:whiteboard:svg"&#62;
    &#60;svg&#62;
      &#60;line id="nikgus@jabber.org/1" x1="10" y="12" x2="112" y2="343" /&#62;
    &#60;/svg&#62;
  &#60;/x&#62;
&#60;/message&#62;</programlisting>
    </blockquote>
  </para>
  <para>A whiteboard session is defined by the thread attribute in the message tag. This can be used to have multiple whiteboards at the same time. SVG messages without a thread attribute has to be discarded.</para>
  <para>For conferencing an entire room is always defined as a whiteboarding room. This room will have jabber:x:whiteboard:svg as a required namespace in accordance with the new conferencing protocol (http://jabber.org/?oid=1538). The server keeps track of which user that got an image. If new SVG data is sent for a whiteboard, the server sends the current state of the image to the new users.</para>
  <para>During some chats clients might want to get acknowledgements to check that the other client has recived or shown the SVG content. This is done using the regular message event protocol (http://docs.jabber.org/draft-proto/html/events.html), for example:</para>
  <para>
    <blockquote>
      <programlisting>&#60;message to="nikgus@jabber.org" thread="234324" id="SVG_MSG_01"&#62;
  &#60;x xmlns="jabber:x:whiteboard:svg"&#62;
    &#60;svg&#62;
      &#60;line id="nikgus@jabber.org/1" x1="10" y="12" x2="112" y2="343" /&#62;
    &#60;/svg&#62;
  &#60;/x&#62;
  &#60;x xmlns="jabber:x:event"&#62;
    &#60;displayed/&#62;
  &#60;/x&#62;
&#60;/message&#62;</programlisting>
    </blockquote>
  </para>
  <para>Returned:</para>
  <para>
    <blockquote>
      <programlisting>&#60;message to="bar@foo.org"&#62;
  &#60;x xmlns="jabber:x:event"&#62;
    &#60;displayed/&#62;
    &#60;id&#62;SVG_MSG_01&#60;/id&#62;
  &#60;/x&#62;
&#60;/message&#62;</programlisting>
    </blockquote>
  </para>
</section>
<section>
  <title>SVG subset</title>
  <para>The DTD for the SVG subset is attached to this document. (Notice: this is only the DTD for adding new SVG objects, when updating and removing objects, not all required attributes are needed). </para>
  <para>The id attribute is always required for all SVG objects. An object sent without and id has to be discarded. All id's during a session has to be in the form: JID/counter. The client is responsible for keeping track of the number of object that the user has added and to increment the counter accordingly.</para>
  <para>The first SVG tag sent in a session should set the size of the whiteboard that is going to be used, for example:</para>
  <para>
    <blockquote>&#60;svg width="200" height="300"&#62;</blockquote>
  </para>
  <para>The size can be changed during a session.</para>
  <para>To add a SVG object, send a tag with, at least, all required attributes. For example:</para>
  <para>
    <blockquote>&#60;line id="nikgus@jabber.org/1" x1="10" y="12" x2="112" y2="343" /&#62;</blockquote>
  </para>
  <para>This will add a line from (10,12) to (112,343) with the default color (black) and width (1 px).</para>
  <para>To change a SVG object, send a tag with the correct id and only the other attributes that should be changed, for example:</para>
  <para>
    <blockquote>&#60;line id="nikgus@jabber.org/1" x2="203"" stroke-color="red" /&#62;</blockquote>
  </para>

  <para>The client can also, to save bandwidth, send several SVG objects in a single message, for example:</para>
  <para>
    <blockquote>
		<programlisting>&#60;message to="nikgus@jabber.org" thread="234324"&#62;
  &#60;x xmlns="jabber:x:whiteboard:svg"&#62;
    &#60;svg&#62;
      &#60;line id="nikgus@jabber.org/1" x1="10" y="12" x2="112" y2="343" /&#62;
      &#60;text id="nikgus@jabber.org/2" x="100" y="34"&#62;This is a text&#60;/text&#62;
      &#60;text id="nikgus@jabber.org/3" x="100" y="47"&#62;This is also a text&#60;/text&#62;
    &#60;/svg&#62;
  &#60;/x&#62;
&#60;/message&#62;</programlisting>
	</blockquote>
  </para>
  <para>The &#60;image&#62; tag can be used to load additional SVG files from a webserver. This will be used for loading definitions files containing symbol sets (or even entire applications written in SVG). For example, a user can upload a SVG file containing all UML symbols to a web server. Then by sending:</para>
  <para>
    <blockquote>
		<programlisting>&#60;message to="nikgus@jabber.org" thread="234324"&#62;
  &#60;x xmlns="jabber:x:whiteboard:svg"&#62;
    &#60;svg&#62;
      &#60;image id="nikgus@jabber.org/1" xlink:href="http://www.protocol7.com/uml.svg" /&#62;
    &#60;/svg&#62;
  &#60;/x&#62;
&#60;/message&#62;</programlisting>
	</blockquote>
  </para>
  <para>All other clients in the session loads this file and any user can then use symbols from it by sending, for example:</para>
  <para>
    <blockquote>
		<programlisting>&#60;message to="nikgus@jabber.org" thread="234324"&#62;
  &#60;x xmlns="jabber:x:whiteboard:svg"&#62;
    &#60;svg&#62;
      &#60;use id="nikgus@jabber.org/2" xlink:href="#uml_condition" x="50" y="43" /&#62;
    &#60;/svg&#62;
  &#60;/x&#62;
&#60;/message&#62;</programlisting>
	</blockquote>
  </para>
  <para>The SVG objects are added on top of each other, but objects can be moved on top or below of each other by using z-index in the transform attribute. This is an extension to the SVG standard.</para>
  <para>All SVG coordinates are defined as pixels (px). All colors are defined as #RRGGBB in hexadecimal numbers, for example: #FF00FF.</para>
  <para>Clients are allowed to extend the SVG subset if needed (for example for scripting or animation) and should then also use and extended namespace.</para>
</section>
<section>
  <title>Examples</title>
  <para>Browsing other client for whiteboard support</para>
  <para>  Send:</para>
  <para>
    <blockquote>
      <programlisting>&#60;iq type="get" to="bar@foo.com"&#62;&#60;query xmlns="jabber:iq:browse" /&#62;&#60;/iq&#62;</programlisting>
    </blockquote>
  </para>
  <para>  Recive:</para>
  <para>
    <blockquote>
      <programlisting>&#60;iq type="result" to="nikgus@jabber.org" from="bar@foo.com"&#62;
  &#60;user jid='bar@foo.com' name='Bar' xmlns='jabber:iq:browse'&#62;
    ...
    &#60;ns&#62;jabber:x:svg&#60;/ns&#62;
    ...
  &#60;/user&#62;
&#60;/iq&#62;</programlisting>
    </blockquote>
  </para>
  <para>Adding a SVG object</para>
  <para>
    <blockquote>
      <programlisting>&#60;message to="room@server" thread="1"&#62;
  &#60;x xmlns="jabber:x:svg"&#62;
    &#60;svg&#62;
      &#60;line id="room@server/id/counter" x1="" x2="" y1="" y2="" /&#62;
    &#60;/svg&#62;
  &#60;/x&#62;
&#60;/message&#62;</programlisting>
    </blockquote>
  </para>
  <para>Changing a SVG object</para>
  <para>
    <blockquote>
      <programlisting>&#60;message to="room@server" thread="1"&#62;
  &#60;x xmlns="jabber:x:svg"&#62;
    &#60;svg&#62;
      &#60;line id="room@server/id/counter" x1="" /&#62;
    &#60;/svg&#62;
  &#60;/x&#62;
&#60;/message&#62;</programlisting>
    </blockquote>
  </para>
  <para>Deleting a SVG object</para>
  <para>
    <blockquote>
      <programlisting>&#60;message to="room@server" thread="1"&#62;
  &#60;x xmlns="jabber:x:svg"&#62;
    &#60;svg&#62;
      &#60;line id="room@server/id/counter" /&#62;
    &#60;/svg&#62;
  &#60;/x&#62;
&#60;/message&#62;</programlisting>
    </blockquote>
  </para>
  <para>Using a symbol defined in a extended SVG subset</para>
  <para>
    <blockquote>
      <programlisting>&#60;message to="room@server" thread="1"&#62;
  &#60;x xmlns="jabber:x:svg:uml"&#62;
    &#60;svg&#62;
      &#60;use id="room@server/id/counter" xlink:href="#conditional" x="" y=""/&#62;
    &#60;/svg&#62;
  &#60;/x&#62;
&#60;/message&#62;</programlisting>
    </blockquote>
  </para>
</section>
</article>
